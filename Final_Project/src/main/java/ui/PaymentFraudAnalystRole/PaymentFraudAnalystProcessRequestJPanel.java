/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PaymentFraudAnalystRole;

import Business.OrderManagement.MasterOrderCatalog;
import Business.OrderManagement.Order;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author aakashbelide
 */
public class PaymentFraudAnalystProcessRequestJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount selectedUser;

    /**
     * Creates new form PaymentFraudAnalystProcessRequestJPanel
     */
    public PaymentFraudAnalystProcessRequestJPanel(JPanel userProcessContainer, UserAccount selectedUser) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.selectedUser = selectedUser;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblFraudAnalysis = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResponse = new javax.swing.JTextArea();
        btnHighFreq = new javax.swing.JButton();
        btnSusBulk = new javax.swing.JButton();
        btnAbnSpend = new javax.swing.JButton();
        btnOddHour = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        Title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Analyse Customer");

        btnBack.setBackground(new java.awt.Color(0, 153, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/arrow.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(btnBack)
                .addGap(185, 185, 185)
                .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(296, 296, 296))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Title)
                    .addComponent(btnBack))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        lblFraudAnalysis.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblFraudAnalysis.setText("Fraud Analysis:");

        txtResponse.setColumns(20);
        txtResponse.setRows(5);
        jScrollPane1.setViewportView(txtResponse);

        btnHighFreq.setBackground(new java.awt.Color(0, 153, 255));
        btnHighFreq.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnHighFreq.setForeground(new java.awt.Color(255, 255, 255));
        btnHighFreq.setText("Detect High Frequency Orders");
        btnHighFreq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighFreqActionPerformed(evt);
            }
        });

        btnSusBulk.setBackground(new java.awt.Color(0, 153, 255));
        btnSusBulk.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSusBulk.setForeground(new java.awt.Color(255, 255, 255));
        btnSusBulk.setText("Detect Suspicious Bulk Orders");
        btnSusBulk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSusBulkActionPerformed(evt);
            }
        });

        btnAbnSpend.setBackground(new java.awt.Color(0, 153, 255));
        btnAbnSpend.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnAbnSpend.setForeground(new java.awt.Color(255, 255, 255));
        btnAbnSpend.setText("Detect Abnormal Spending Patterns");
        btnAbnSpend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbnSpendActionPerformed(evt);
            }
        });

        btnOddHour.setBackground(new java.awt.Color(0, 153, 255));
        btnOddHour.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnOddHour.setForeground(new java.awt.Color(255, 255, 255));
        btnOddHour.setText("Detect Odd Hour Orders");
        btnOddHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOddHourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(lblFraudAnalysis)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addGap(104, 104, 104))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSusBulk, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(btnHighFreq, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAbnSpend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOddHour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(217, 217, 217))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(lblFraudAnalysis)))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHighFreq)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSusBulk))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAbnSpend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOddHour)))
                .addContainerGap(155, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) this.userProcessContainer.getLayout();
        layout.previous(this.userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnHighFreqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHighFreqActionPerformed
        // TODO add your handling code here:
        analyseCustomer("High Frequency Order Count", detectHighFrequencyOrders(this.selectedUser.getCustOrders(), 30));
    }//GEN-LAST:event_btnHighFreqActionPerformed

    private void btnSusBulkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSusBulkActionPerformed
        // TODO add your handling code here:
        analyseCustomer("Suspipicous Bulk Order Count", detectSuspiciousBulkOrders(this.selectedUser.getCustOrders(), 20, 30));
    }//GEN-LAST:event_btnSusBulkActionPerformed

    private void btnAbnSpendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbnSpendActionPerformed
        // TODO add your handling code here:
        analyseCustomer("No of abnormals spending orders", detectAbnormalSpendingPatterns(this.selectedUser.getCustOrders(), 2));
    }//GEN-LAST:event_btnAbnSpendActionPerformed

    private void btnOddHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOddHourActionPerformed
        // TODO add your handling code here:
        analyseCustomer("No of odd hour orders", detectOddHourOrders(this.selectedUser.getCustOrders(), 0, 5));
    }//GEN-LAST:event_btnOddHourActionPerformed

    private void analyseCustomer(String fraudTitle, int suspiciousOrdersCount) {
        String existingText = txtResponse.getText();
        String fraudAnalysis = existingText + System.lineSeparator() + fraudTitle + ": " + String.valueOf(suspiciousOrdersCount) + System.lineSeparator();
        
        txtResponse.setText(fraudAnalysis);
    }
    
    public int detectHighFrequencyOrders(MasterOrderCatalog catalog, int secondsThreshold) {
        int suspiciousOrdersCount = 0;
        ArrayList<Order> orders = catalog.getOrders();

        for (int i = 0; i < orders.size() - 1; i++) {
            Order currentOrder = orders.get(i);
            Order nextOrder = orders.get(i + 1);
            long timeDifference = java.time.Duration.between(currentOrder.getOrderDateTime(), nextOrder.getOrderDateTime()).getSeconds();

            if (timeDifference <= secondsThreshold) {
                suspiciousOrdersCount += 1;
            }
        }

        return suspiciousOrdersCount;
    }
    
    public int detectSuspiciousBulkOrders(MasterOrderCatalog catalog, float amountThreshold, int secondsThreshold) {
        int suspiciousOrdersCount = 0;
        ArrayList<Order> orders = catalog.getOrders();

        for (int i = 0; i < orders.size() - 1; i++) {
            Order currentOrder = orders.get(i);
            Order nextOrder = orders.get(i + 1);

            if (currentOrder.getTransactionAmount() > amountThreshold && nextOrder.getTransactionAmount() > amountThreshold) {
                long timeDifference = java.time.Duration.between(currentOrder.getOrderDateTime(), nextOrder.getOrderDateTime()).getSeconds();
                if (timeDifference <= secondsThreshold) {
                    suspiciousOrdersCount += 1;
                }
            }
        }

        return suspiciousOrdersCount;
    }
    
    public int detectAbnormalSpendingPatterns(MasterOrderCatalog catalog, float multiplierThreshold) {
        int suspiciousOrdersCount = 0;
        float averageSpending = catalog.getAmountSpent() / catalog.getNoOrders();

        for (Order order : catalog.getOrders()) {
            if (order.getTransactionAmount() > (averageSpending * multiplierThreshold)) {
                suspiciousOrdersCount += 1;
            }
        }

        return suspiciousOrdersCount;
    }
    
    public int detectOddHourOrders(MasterOrderCatalog catalog, int startHour, int endHour) {
        int suspiciousOrdersCount = 0;

        for (Order order : catalog.getOrders()) {
            int orderHour = order.getOrderDateTime().getHour();
            if (orderHour >= startHour && orderHour <= endHour) {
                suspiciousOrdersCount += 1;
            }
        }

        return suspiciousOrdersCount;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton btnAbnSpend;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHighFreq;
    private javax.swing.JButton btnOddHour;
    private javax.swing.JButton btnSusBulk;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFraudAnalysis;
    private javax.swing.JTextArea txtResponse;
    // End of variables declaration//GEN-END:variables
}
